{"version":3,"sources":["Navbar/Navbar.js","Homepage/HomeTitle.js","Homepage/ChooseSettings.js","Homepage/Homepage.js","Quiz/Question.js","Quiz/ShowSettings.js","Quiz/Timer.js","Quiz/Quiz.js","Result/ShowCorrectAnwers.js","Quiz/ShowTimer.js","Result/Result.js","Aboutpage/Person.js","Aboutpage/People.js","Aboutpage/Aboutpage.js","ErrorBoundary.js","NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","id","exact","to","activeClassName","HomeTitle","ChooseSettings","props","value","chosenDif","difficulty","onChange","e","selectDif","difficulties","find","cat","target","map","diff","key","chosenCat","name","selectCat","categories","Homepage","openModal","setState","modalIsOpen","afterOpenModal","subtitle","style","color","closeModal","state","this","getQuiz","updatedTimer","onClick","handleChoices","isOpen","onAfterOpen","onRequestClose","ref","Component","Question","shuffleAnswers","array","i","length","decodeURIComponent","j","Math","floor","random","answers","incorrect","correct","updateUserAnswer","numQ","question","btnColor","userAnswer","clickedNext","ans","answer","htmlFor","ShowSettings","Timer","seconds","Quiz","quizInfo","pausedTimer","history","useHistory","useState","step","setStep","setBtnColor","setClickedNext","arr","Object","keys","forEach","push","incrementStep","preventDefault","corrAns","correct_answer","userAns","user_answer","setTimeout","q","onSubmit","incorrect_answers","ShowCorrectAnswers","scope","ShowTimer","Result","getScore","resetTimer","score","el","relativeScore","resultMessage","Person","photo","linkedin","github","src","alt","authors","People","person","Aboutpage","ErrorBoundary","error","errorInfo","whiteSpace","toString","componentStack","children","NotFoundPage","textAlign","React","App","askedDif","includes","fetch","then","response","json","data","getCategories","results","trivia_categories","handleCategory","clickedCat","handleDifficulty","clickedDif","updateAnswer","updateTimer","myInterval","setInterval","preState","pauseTimer","clearInterval","path","render","componentDidUpdate","component","withRouter","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45a3df4a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.css';\n\nconst Navbar = () =>{\n\n   return (  \n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top nav-adjust\">\n         <a href=\"./\" className=\"navbar-text\"><span className=\"small-logo\">(not)</span>TrivialQuest</a>  \n         <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span className=\"navbar-toggler-icon\"></span>\n         </button>\n         <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n            <div className=\"navbar-nav\">\n               <NavLink exact to='/' className=\"navbar-links nav-item\" activeClassName='active'>Homepage</NavLink>\n               <NavLink to='/about' className=\"navbar-links nav-item\" activeClassName='active'>About us</NavLink>\n            </div>\n         </div>\n      </nav>\n   )\n}\n\nexport default Navbar;","import React from 'react';\nimport './HomeTitle.css'\n\nconst HomeTitle = () =>{\n    return ( \n       <>\n          <h1 className=\"home-title\">Welcome to our Trivia Quiz!</h1>\n          <h2 className=\"home-subtitle\"> Press start to begin</h2>\n       </>\n    )\n }\n\n export default HomeTitle;","import React from 'react';\nimport './ChooseSettings.css';\n \nconst ChooseSettings = (props) =>  {\n   const handleDiffSelect= (e) => props.selectDif (props.difficulties.find(cat=> cat.difficulty === e.target.value));\n   const handleCatSelect= (e) => props.selectCat (props.categories.find(cat=> cat.name === e.target.value));\n\n   return ( \n        <div className=\"chooseSettingsWrap\">\n            <select  className=\"settingsOptionsDrop\" value={props.chosenDif.difficulty} onChange={handleDiffSelect}>\n                {props.difficulties.map(diff => (\n                    <option \n                        key={diff.id}>{diff.difficulty}\n                    </option>\n                ))}\n            </select>\n            <select className=\"settingsOptionsDrop\" value={props.chosenCat.name} onChange={handleCatSelect}>\n                {props.categories.map(cat => (\n                    <option \n                        key={cat.id}>{cat.name}\n                    </option>\n                ))} \n            </select>\n        </div> \n    )\n}\n\n\nexport default ChooseSettings;\n\n","import HomeTitle from './HomeTitle';\nimport Modal from 'react-modal';\nimport React, { Component } from 'react';\nimport ChooseSettings from './ChooseSettings';\n\nimport './HomePage.css';\nimport '../App.css';\n\nclass Homepage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n    }\n  };\n\n  openModal = () => {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal = () => {\n    if (this.state.modalIsOpen === true) {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n  }\n  \n  handleChoices() {\n    this.props.getQuiz(); \n    this.props.updatedTimer();\n  };\n   \n  \n  render() {\n    const { chosenCat, chosenDif, categories, difficulties, selectCat, selectDif} = this.props;\n    return ( \n      <main className=\"homepage-main\">\n        <ChooseSettings \n            selectDif={selectDif} \n            chosenDif={chosenDif}\n            difficulties={difficulties}\n            chosenCat={chosenCat}\n            selectCat={selectCat}\n            categories={categories}\n        />\n          \n        <HomeTitle /> \n        <div className=\"btns_container\" onClick={this.closeModal}>\n          <div className=\"help-btn-div\">\n            <button onClick={this.openModal} className=\"HelpBtn\">?</button>\n          </div>\n          <div className=\"start-btn-div\">\n            <button \n              onClick={() => this.handleChoices()} \n              className=\"start-btn\"\n            >Start\n            </button>\n          </div>\n            <Modal \n              className=\"ModalStyle\"\n              isOpen={this.state.modalIsOpen}\n              onAfterOpen={this.afterOpenModal}\n              onRequestClose={this.closeModal}\n            >\n              <div className='Modal_Container'>\n                <h2 ref={subtitle => this.subtitle = subtitle}>Questions</h2>\n                <p className=\"modal-text\">Choose the Category and leve of dificulty. By default it shows a random mix of questions. There are 10 of them... are you ready?</p>\n                <button onClick={this.closeModal} className=\"Close\">Close</button>\n              </div>\n            </Modal>\n        </div>\n      </main>\n    );\n  }\n}\n\n\nexport default Homepage;\n","import React, { Component } from 'react';\n\nimport './Quiz.css';\nimport './Question.css'\n\nclass Question extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         answers: [],\n      }\n   }\n\n   componentDidMount(){\n      this.shuffleAnswers([...this.props.incorrect, this.props.correct]);\n   }\n\n   // ES6 Fisher–Yates shuffle algorithm\n   shuffleAnswers = (array) => {\n      for (let i = array.length - 1; i > 0; i--) {\n         decodeURIComponent(array[i])\n         const j = Math.floor(Math.random() * (i + 1));\n         [array[i], array[j]] = [array[j], array[i]];\n      }  \n      return this.setState({answers: array})\n   }\n   \n   render() {\n      // destructuring props\n      const { updateUserAnswer, numQ, question, btnColor, userAnswer, clickedNext } = this.props;\n      const { answers } = this.state;\n      return (\n         <div className=\"question-div\">           \n            <legend className=\"question\">{numQ} - {decodeURIComponent(question)}</legend>\n            <div className=\"answers-div\">\n               {answers.map((ans, i)=>{\n                  let answer = decodeURIComponent(ans);\n                  return (\n                     <>\n                        <input \n                           type=\"radio\" \n                           name={numQ} \n                           value={answer} \n                           id={numQ*10+i}\n                           onChange={() => updateUserAnswer(numQ, answer)}\n                           className=\"radio\"\n                        />     \n                        <label \n                           htmlFor={numQ*10+i} \n                           key={answer} \n                           className={(answer===userAnswer&&clickedNext) ? `answer-div ${btnColor} col-sm-5 col-md-4` : `answer-div answer-div-nonClickedNext col-sm-5 col-md-4 label-before-submit`}\n                        >\n                           {answer}\n                        </label>\n                     </>\n                  )\n               })} \n            </div>    \n         </div>\n      )\n   }\n}\n\n\n\nexport default Question;","import React from 'react';\nimport './ShowSettings.css'\n\nconst ShowSettings = ({ chosenCat, chosenDif }) => {\n   return (\n      <div className=\"show-settings\">\n         <p>Category: {chosenCat.name === \"Any Category\" ? \"Any\" : chosenCat.name}</p>\n         <p>Difficulty: {chosenDif.difficulty === \"Any Difficulty\" ? \"Any\" : chosenDif.difficulty}</p>\n      </div>\n   )\n}\n\nexport default ShowSettings;","import React from 'react';\n\nconst Timer = ({seconds}) => {\n        return (\n            <div>\n                <p> Time: {seconds} </p>\n            </div>\n        )\n    }\n \n\nexport default Timer;\n","import React, { useState } from 'react';\nimport Question from './Question';\nimport ShowSettings from './ShowSettings';\nimport { useHistory } from \"react-router-dom\";\nimport Timer from './Timer'\n\nimport './Quiz.css';\nimport '../App.css';\n\n\n\nconst Quiz = ({ quizInfo, chosenCat, chosenDif, updateUserAnswer, seconds, pausedTimer}) =>{\n\n\n   // to allow use of history.push\n   let history = useHistory();\n\n   // setup Hooks!\n   const [step, setStep] = useState(0);\n   const [btnColor, setBtnColor] = useState('');\n   const [clickedNext, setClickedNext] = useState(false);\n  \n  \n   // turns the json object from props into an array so we can iterate over it\n   let arr = [];\n   Object.keys(quizInfo).forEach(function(key) {\n      arr.push(quizInfo[key]);\n    });\n   \n   // using hooks\n   const incrementStep = (e) => { \n      e.preventDefault();\n      let corrAns = decodeURIComponent(quizInfo[step].correct_answer);\n      let userAns = quizInfo[step].user_answer;\n      corrAns===userAns ? setBtnColor(\"correct\") : setBtnColor(\"incorrect\");\n      setClickedNext(true);\n      //go to next question after a delay, otherwise go to result page\n      if (step<9) { \n         setTimeout(()=> {\n            setStep(step+1);\n            setClickedNext(false);\n            setBtnColor('');\n         },700); \n      } else {\n         setTimeout(()=> {\n            history.push(\"/result\")\n         },700);\n         pausedTimer(); \n      } \n   }\n  \n\n   return (\n\n      <main className=\"quiz-main\">\n         <section className=\"show-settings-timer\">\n            <ShowSettings \n               chosenCat={chosenCat}\n               chosenDif={chosenDif}\n               />\n            <Timer \n               seconds={seconds}\n             />\n         </section>\n         <section className=\"container section-question\">\n            <div >\n\n            {arr.map((q,i) => {\n               if (step!==i) return null;\n               return (\n                  <form className=\"question-form text-center\" onSubmit={incrementStep} key={decodeURIComponent(q.question)} >\n                     <Question \n                        userAnswer={quizInfo[i].user_answer}\n                        updateUserAnswer={updateUserAnswer}\n                        numQ={i+1} \n                        question={q.question} \n                        correct={q.correct_answer} \n                        incorrect={q.incorrect_answers} \n                        btnColor={btnColor}\n                        clickedNext={clickedNext}\n                        />\n                     {(step<9) && <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />}\n                     {(step===9) && <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />}    \n                  </form>\n               )    \n            })} \n            </div>\n         </section>         \n      </main> \n   )\n}\n\nexport default Quiz;","import React from 'react';\nimport \"./ShowCorrectAnswers.css\";\n\nconst ShowCorrectAnswers = ({ quizInfo }) => {\n\n   return (\n      <section className=\"answers-table\">\n         <button \n            type=\"button\" \n            className=\"btn btn-outline-danger see-answers-btn\" \n            data-toggle=\"collapse\" \n            data-target=\"#answer-table\"\n            >\n            See answers!\n         </button>\n         <div id=\"answer-table\" className=\"collapse\">\n            <table className=\"table table-hover\">\n               <thead className=\"answers-tablehead thead-dark\">\n                  <tr>\n                     <th scope=\"col\">#</th>\n                     <th scope=\"col\">Question</th>\n                     <th scope=\"col\">Correct answer</th>\n                     <th scope=\"col\">Your answer</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {quizInfo.map((q, i)=>{\n                     return (\n                        <tr key={i+1}>\n                           <th scope=\"row\">{i+1}</th>\n                           <td>{decodeURIComponent(q.question)}</td>\n                           <td>{decodeURIComponent(q.correct_answer)}</td>\n                           <td>{q.user_answer}</td>\n                        </tr> \n                     )\n                  })}\n               </tbody>\n            </table>\n         </div>\n      </section>\n   )\n}\n\nexport default ShowCorrectAnswers;","import React from 'react';\n\nconst ShowTimer= ({seconds}) => {\n   return (\n        <p className=\"show-Timer\"> \n            Total time: {seconds} seconds\n        </p>\n   )};\n\nexport default ShowTimer;","import React from 'react';\n\nimport ShowCorrectAnswers from './ShowCorrectAnwers';\nimport ShowSettings from '../Quiz/ShowSettings';\nimport ShowTimer from '../Quiz/ShowTimer';\nimport { Link } from 'react-router-dom'\n\nimport '../App.css';\nimport './Result.css';\n\nconst Result = ({ quizInfo, chosenCat, chosenDif, seconds, resetTimer}) =>{\n  \n   const getScore = () => {\n      let score = 0;\n      quizInfo.forEach((el) => {\n         let correct = decodeURIComponent(el['correct_answer']);\n         if (correct === el['user_answer']) {\n            score +=10;\n         }\n      })\n      return score;\n   }\n\n   // show a more personal message depending on user score\n   const resultMessage = () => {\n      let message = '';\n      let relativeScore = getScore();\n      if (relativeScore===100) {\n         message = \"LEGEN (wait for it) DARY!!!\";\n      } else if (relativeScore>=80) {\n         message = \"WOW... you are a genius!\";\n      } else if (relativeScore>=60) {\n         message = \"You are amazing!\";\n      } else if (relativeScore>=40) {\n         message = \"Good job!\";\n      } else if (relativeScore>=20) {\n         message = \"Well, it wasn't thaaat bad...\";\n      } else {\n         message = \"Oh dear! You might want to pick up a book or two.\";\n      }\n      return message;\n   }  \n  \n   return (\n      <main className=\"result-main\">\n         <section className=\"result-showsettings\">\n            <ShowSettings chosenDif={chosenDif} chosenCat={chosenCat} />\n         </section>\n            <p>{resultMessage()}</p>\n         <div className=\"result-info\">\n            <p>Your score: {getScore()} / 100 </p>\n            <ShowTimer seconds={seconds} /> \n         </div>\n         <ShowCorrectAnswers quizInfo={quizInfo}/>\n         <Link to='/'> \n            <button className=\"playAgain-btn\">Play again!</button> \n         </Link>    \n      </main>\n   )\n}\n\n\nexport default Result;","import React from 'react';\nimport './Aboutpage.css'\n\nconst Person = ({ name, photo, linkedin, github }) => {\n   return ( \n       <article className=\"person\">\n            <figure>\n                <img src={photo} alt={name} className=\"photos-us\" />\n                <figcaption>\n                    {name}\n                    <p className=\"job-student\">Web-Development Student</p>\n                </figcaption>\n            </figure>\n            <div className=\"social-media\">\n                <a href={linkedin}> <img src=\"https://i.imgur.com/hzkKCzQ.png?1\" alt={name} /> </a>\n                <a href={github}> <img src=\"https://i.imgur.com/PYGpHt0.png?1\" alt={name} /> </a>\n            </div>\n        </article>\n    )\n};\n\n\nexport default Person;","import React from \"react\";\nimport Person from './Person';\n\nconst authors = [\n    {\n    name:\"Manuela Cardoso\",\n    photo:\"https://i.imgur.com/sCzb5UP.png?1\",\n    linkedin:\"https://www.linkedin.com/in/manuela-cardoso-94b6b829/\",\n    github: \"https://github.com/Zzphyr\"\n},\n{ \n    name:\"Victoria Zimmermann\",\n    photo:\"https://i.imgur.com/pm9oA7Z.png?1\",\n    linkedin:\"https://www.linkedin.com/in/victoria-z-b6b57295/\",\n    github: \"https://github.com/tzimms\"\n    }\n];\n \nconst People = () => (\n    <section className=\"people\"> \n        {authors.map(person => (\n            <Person key= {person.name} \n                name={person.name}\n                photo={person.photo}\n                linkedin={person.linkedin}\n                github={person.github}\n            />\n        ))} \n    </section> \n);\n\nexport default People; ","import React from 'react';\nimport People from './People';\n\nimport './Aboutpage.css';\nimport '../App.css';\n\nconst Aboutpage = () => {\n   \n   return (\n      <main className=\"about-main\">\n         <h1 className=\"about-title\">About us</h1>\n         <People />\n         <article className=\"project-description\">\n            <p>App developed for Wild Code School's second group project in React Web Dev course.</p>\n            <p>Here we tried to apply what was learned in just one month. More than a showcase of knowledge, we wanted to train and practice with an ambicious project for newcomers... and to provide an enjoyable experience to you, dear visitor!</p>  \n         </article>\n      </main>\n   );\n   \n}\n\nexport default Aboutpage;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { \n         error: null, \n         errorInfo: null\n      };\n   }\n   \n   componentDidCatch(error, errorInfo) {\n      // Catch errors in any components below and re-render with error message\n      this.setState({\n         error: error,\n         errorInfo: errorInfo\n      })\n      // You can also log error messages to an error reporting service here\n   }\n   \n   render() {\n      if (this.state.errorInfo) {\n         // Error path\n         return (\n            <div>\n               <h2>Oh no! Something went wrong.</h2>\n\n               <details style={{ whiteSpace: 'pre-wrap' }}>\n                  {this.state.error && this.state.error.toString()}\n                  <br />\n                  {this.state.errorInfo.componentStack}\n               </details>\n            </div>\n         );\n      }\n      // Normally, just render children\n      return this.props.children;\n   }  \n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass NotFoundPage extends React.Component{\n   render(){\n      return (\n         <div style={{textAlign:\"center\"}}>\n            <h1>Ops! This is not the page you are looking for!</h1>\n            <h3>Now dog is sad it only exists in his imagination...</h3>\n            <img src='https://i.imgur.com/ZSzQ3W4.png?1' alt='' />\n            <p>\n               <Link to=\"/\">Click here to bring him Home </Link>\n            </p>\n         </div>\n      ) \n   }\n}\nexport default NotFoundPage;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nimport Navbar from \"./Navbar/Navbar\";\nimport Homepage from \"./Homepage/Homepage\";\nimport Quiz from \"./Quiz/Quiz\";\nimport Result from \"./Result/Result\";\nimport Aboutpage from \"./Aboutpage/Aboutpage\";\n\nimport ErrorBoundary from './ErrorBoundary';\nimport NotFoundPage from './NotFoundPage';\n\n\nimport './App.css';\n\n\nconst difficulty = [\n  {id: \"\", difficulty: \"Any Difficulty\"}, \n  {id: \"easy\", difficulty: \"Easy\"},\n  {id: \"medium\", difficulty: \"Medium\"},\n  {id: \"hard\", difficulty: \"Hard\"},\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizInfo: {},\n      chosenCat: { id:0, name:\"Any Category\" },\n      chosenDif: { id:0, difficulty: \"Any Difficulty\"},\n      categories:[{ id:0, name:\"Any Category\" }],\n      seconds: 0,\n    }\n  }\n   \n  getQuiz = () => {\n    const lessThan10Questions = [13, 25,26, 29, 30];\n    let askedDif = this.state.chosenDif.id;\n    if (lessThan10Questions.includes(this.state.chosenCat.id)){\n      askedDif='';\n    }\n    fetch(`https://opentdb.com/api.php?amount=10&category=${this.state.chosenCat.id}&difficulty=${askedDif}&type=multiple&encode=url3986`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState(\n            // push runs immediately without waiting for request\n            // results in page change without receiving json\n            // here, they are functions instead of objects\n            // thus we get extra functionality including \"waiting\"\n          (state) => ({\n              ...state,\n              quizInfo : data[\"results\"],\n              seconds : 0,\n            }), \n          () => this.props.history.push('/quiz')\n        )\n      })\n  }\n\n  componentDidMount() {\n    this.getCategories();\n  }\n\n  // Fetch category list from API (for the dropdown) \n  getCategories = () => {\n    fetch('https://opentdb.com/api_category.php')\n      .then (response => response.json())\n      .then (results => {\n        this.setState( (state) => ({ \n          ...state,\n          categories: [\n            { id:0, name:\"Any Category\" }, \n            ...results.trivia_categories\n          ],\n        }))\n      })\n  };\n\n  handleCategory = (clickedCat) => {\n    this.setState({\n      chosenCat: clickedCat\n    });\n  }\n\n  handleDifficulty = (clickedDif) => {\n    this.setState({\n      chosenDif: clickedDif\n    });\n  }\n\n  updateUserAnswer = (numQ, ans) => {\n    this.setState(\n      (state) => {\n        const updateAnswer = state.quizInfo.map((q,i) => {\n          if(i===numQ-1) {\n            q['user_answer']=ans;\n          }\n          return q;\n        })\n        return {\n          ...state,\n          quizInfo: updateAnswer,\n        }\n      }\n    )\n  }\n\n  updateTimer = () => {\n    this.myInterval = setInterval(() => {\n      this.setState(preState => ({\n      seconds: preState.seconds +1\n      }))\n    }, 1000)\n  }\n  \n  pauseTimer = () => {\n    clearInterval(this.myInterval) \n    }\n\n\n    \n\n  render () {\n    const { quizInfo, chosenCat, chosenDif, categories, seconds} = this.state;\n    return (\n      <>\n      <ErrorBoundary>\n      <Navbar />\n          <Switch>\n            <Route \n              exact path='/' \n              render={()=> (\n                <Homepage \n                  getQuiz={this.getQuiz}\n                  selectDif={this.handleDifficulty}\n                  chosenDif={chosenDif}\n                  difficulties={difficulty}\n                  chosenCat={chosenCat}\n                  selectCat={this.handleCategory}\n                  categories={categories}\n                  updatedTimer={this.updateTimer}\n                />\n              )} \n            />\n            <Route \n              exact path='/quiz' \n              render = {() => (\n                <Quiz\n                quizInfo={quizInfo}\n                chosenCat={chosenCat}\n                chosenDif={chosenDif}\n                updateUserAnswer={this.updateUserAnswer} \n                componentDidUpdate={this.componentDidUpdate}\n                seconds={seconds}\n                pausedTimer={this.pauseTimer}\n                />\n              )}\n            />\n            <Route \n              path='/result' \n              render = {() => (\n                <Result \n                  quizInfo={quizInfo}\n                  chosenCat={chosenCat}\n                  chosenDif={chosenDif}\n                  seconds={seconds}\n                />\n              )}\n            />  \n            <Route path='/about' component={Aboutpage} />\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </ErrorBoundary>      \n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n   <BrowserRouter>\n      <App />\n   </BrowserRouter>, \n   document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}